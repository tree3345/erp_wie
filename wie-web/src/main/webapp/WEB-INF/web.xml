<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0" metadata-complete="true">
	<display-name>sshpermission</display-name>
	
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:/applicationContext.xml,classpath*:/applicationContext-shiro.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<filter>
		<filter-name>osivFilter</filter-name>
		<filter-class>com.wie.common.tools.core.TgOpenSessionInViewFilter</filter-class>
		
		<init-param>
			<param-name>sessionFactoryBeanName</param-name>
			<param-value>sessionFactory</param-value>
	   </init-param>
	   <init-param>
            <param-name>singleSession</param-name>
            <param-value>true</param-value>           
        </init-param>
        <init-param>
        <param-name>flushMode</param-name>
   		<param-value>AUTO</param-value>        
        </init-param> 
	</filter>
	
	<!-- Shiro filter start-->  
	<filter>  
	    <filter-name>shiroFilter</filter-name>  
	    <filter-class>  
	        org.springframework.web.filter.DelegatingFilterProxy  
	    </filter-class>  
	</filter>  
	<filter-mapping>  
	    <filter-name>shiroFilter</filter-name>  
	    <url-pattern>/*</url-pattern>  
	</filter-mapping>
	<!-- Shiro filter end-->  
	
	<filter-mapping>
		<filter-name>osivFilter</filter-name>
		<url-pattern>*.tg</url-pattern>
	</filter-mapping>
	<servlet>
    <servlet-name>kaptcha</servlet-name>
    <servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
    <init-param>
      <description> Border around kaptcha. Legal values are yes or no. </description>
      <param-name>kaptcha.border</param-name>
      <param-value>no</param-value>
    </init-param>
    <init-param>
      <description>Color of the border. Legal values are r,g,b (and optional alpha) or white,black,blue. </description>
      <param-name>kaptcha.border.color</param-name>
      <param-value>red</param-value>
    </init-param>
    <init-param>
      <description>Thickness of the border around kaptcha. Legal values are > 0. </description>
      <param-name>kaptcha.border.thickness</param-name>
      <param-value>5</param-value>
    </init-param>
    <init-param>
      <description>Width in pixels of the kaptcha image. </description>
      <param-name>kaptcha.image.width</param-name>
      <param-value>85</param-value>
    </init-param>
    <init-param>
      <description>Height in pixels of the kaptcha image. </description>
      <param-name>kaptcha.image.height</param-name>
      <param-value>35</param-value>
    </init-param>
    <init-param>
      <description>The image producer. </description>
      <param-name>kaptcha.producer.impl</param-name>
      <param-value>com.google.code.kaptcha.impl.DefaultKaptcha </param-value>
    </init-param>
    <init-param>
      <description>The text producer. </description>
      <param-name>kaptcha.textproducer.impl</param-name>
      <param-value>com.google.code.kaptcha.text.impl.DefaultTextCreator</param-value>
    </init-param>
    <init-param>
      <description>The characters that will create the kaptcha. </description>
      <param-name>kaptcha.textproducer.char.string</param-name>
      <param-value>abcde2345678gfynmnpwx </param-value>
    </init-param>
    <init-param>
      <description>The number of characters to display. </description>
      <param-name>kaptcha.textproducer.char.length</param-name>
      <param-value>5</param-value>
    </init-param>
    <init-param>
      <description>A list of comma separated font names.</description>
      <param-name>kaptcha.textproducer.font.names</param-name>
      <param-value>Arial, Courier</param-value>
    </init-param>
    <init-param>
      <description>The size of the font to use. </description>
      <param-name>kaptcha.textproducer.font.size</param-name>
      <param-value>23</param-value>
    </init-param>
    <init-param>
      <description>The color to use for the font. Legal values are r,g,b. </description>
      <param-name>kaptcha.textproducer.font.color</param-name>
      <param-value>black</param-value>
    </init-param>
    <init-param>
      <description>The noise producer. </description>
      <param-name>kaptcha.noise.impl</param-name>
      <param-value>com.google.code.kaptcha.impl.NoNoise </param-value>
    </init-param>
    <init-param>
      <description>The noise color. Legal values are r,g,b. </description>
      <param-name>kaptcha.noise.color</param-name>
      <param-value>black</param-value>
    </init-param>
    <init-param>
      <description>The obscurificator implementation. </description>
      <param-name>kaptcha.obscurificator.impl</param-name>
      <param-value>com.google.code.kaptcha.impl.ShadowGimpy</param-value>
    </init-param>
    <init-param>
      <description>The background implementation. </description>
      <param-name>kaptcha.background.impl</param-name>
      <param-value>com.google.code.kaptcha.impl.DefaultBackground</param-value>
    </init-param>
    <init-param>
      <description>Ending background color. Legal values are r,g,b. </description>
      <param-name>kaptcha.background.clear.to</param-name>
      <param-value>white</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>kaptcha</servlet-name>
    <url-pattern>/Kaptcha.jpg</url-pattern>
  </servlet-mapping>
	
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	
	<!-- Start by ligangying listener -->
	<listener>
		<listener-class>
			com.wie.permissions.listener.MemoryListener
		</listener-class>
	</listener>
	<!-- End by ligangying listener -->
	
	<!-- Character Encoding filter -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>
			org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>
			org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter
		</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

<filter> 
<filter-name>gzip</filter-name> 
<filter-class>com.wie.common.tools.util.CompressionFilter</filter-class> 
</filter> 
<filter-mapping> 
<filter-name>gzip</filter-name> 
<url-pattern>/css/*</url-pattern> 
<url-pattern>/images/*</url-pattern> 
</filter-mapping>
	
	<welcome-file-list>
		<welcome-file>/loginLogin.tg</welcome-file>
	</welcome-file-list>
	
	<!-- <error-page>
		<error-code>404</error-code>
		<location>/404.htm</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/500.htm</location>
	</error-page> -->
	
</web-app>
